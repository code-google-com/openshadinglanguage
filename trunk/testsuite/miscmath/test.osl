#ifndef M_E
#define M_E 2.718281828459
#endif


shader
test ()
{
    {
        int i = 137;
        printf ("  abs (%d) = %d\n", i, abs(i));
        printf ("  fabs (%d) = %d\n", i, fabs(i));
        i = -137;
        printf ("  abs (%d) = %d\n", i, abs(i));
        printf ("  fabs (%d) = %d\n", i, fabs(i));
        float a = 101.29;
        printf ("  fabs (%g) = %g\n", a, fabs(a));
        printf ("  floor (%g) = %g\n", a, floor(a));
        printf ("  ceil (%g) = %g\n", a, ceil(a));
        printf ("  sqrt (%g) = %g\n", a, sqrt(a));
        a = -137.29;
        printf ("  fabs (%g) = %g\n", a, fabs(a));
        printf ("  floor (%g) = %g\n", a, floor(a));
        printf ("  ceil (%g) = %g\n", a, ceil(a));
        printf ("  sqrt (%g) = %g\n", a, sqrt(a));
    }

    { 
        vector a = 101.29;
        printf ("  fabs (%g) = %g\n", a, fabs(a));
        printf ("  floor (%g) = %g\n", a, floor(a));
        printf ("  ceil (%g) = %g\n", a, ceil(a));
        printf ("  sqrt (%g) = %g\n", a, sqrt(a));
        a = -137.29;
        printf ("  fabs (%g) = %g\n", a, fabs(a));
        printf ("  floor (%g) = %g\n", a, floor(a));
        printf ("  ceil (%g) = %g\n", a, ceil(a));
        printf ("  sqrt (%g) = %g\n", a, sqrt(a));
    }

    printf (" varying:\n");
    {
        float a = u;
        printf ("  fabs (%g) = %g\n", a, fabs(a));
        printf ("  floor (%g) = %g\n", a, floor(a));
        printf ("  ceil (%g) = %g\n", a, ceil(a));
        printf ("  sqrt (%g) = %g\n", a, sqrt(a));
    }

    {
        color a = u;
        printf ("  fabs (%g) = %g\n", a, fabs(a));
        printf ("  floor (%g) = %g\n", a, floor(a));
        printf ("  ceil (%g) = %g\n", a, ceil(a));
        printf ("  sqrt (%g) = %g\n", a, sqrt(a));
    }
}
